{
  "entityType" : "CONVERTER",
  "entity" : {
    "additionalInfo" : {
      "description" : ""
    },
    "configuration" : {
      "scriptLang" : "JS",
      "decoder" : "// Decode an uplink message from a buffer\n// {\"ZbState\":{\"Status\":34,\"IEEEAddr\":\"0x70B3D52B6002F1A3\",\"ShortAddr\":\"0xACBC\",\"ParentNetwork\":\"0x0000\",\"JoinStatus\":1,\"Decision\":0}}\n// payload - array of bytes\n// metadata - key/value object\n// {\"ZbReceived\":{\"Device\":\"0x2979\",\"BatteryPercentage\":100,\"BatteryVoltage\":3,\"Endpoint\":1,\"LinkQuality\":107}}\n// {\"ZbReceived\":{\"Device\":\"0x5B7C\",\"AppVersion\":100,\"Endpoint\":1,\"LinkQuality\":58}}\n// {\"ZbReceived\":{\"Device\":\"0xB114\",\"AppVersion\":82,\"0000/FFE2\":54,\"0000/FFE4\":0,\"Endpoint\":1,\"LinkQuality\":110}}\n// {\"ZbReceived\":{\"Device\":\"0x2979\",\"Cluster\":10,\"Read\":[7],\"ReadNames\":{\"LocalTime\":true},\"Endpoint\":1,\"LinkQuality\":110}}\n// Motion Sensor\n// {\"ZbReceived\":{\"Device\":\"0x2979\",\"0500?00\":\"010800010000\",\"ZoneStatusChange\":2049,\"ZoneStatusChangeZone\":1,\"Movement\":1,\"Endpoint\":1,\"LinkQuality\":113}}\n// Water Sensor\n//  {\"ZbReceived\":{\"Device\":\"0x1A7E\",\"0500?00\":\"000000010000\",\"ZoneStatusChange\":0,\"ZoneStatusChangeZone\":1,\"Water\":0,\"Endpoint\":1,\"LinkQuality\":126}}\n\n// {\"ZbReceived\":{\"Device\":\"0xB114\",\"Power\":1,\"Endpoint\":1,\"LinkQuality\":113}}\n\n// Energy Meter\n// {\"ZbReceived\":{\"Device\":\"0xB6D4\",\"Power\":0,\"Endpoint\":1,\"LinkQuality\":76}}\n//  {\"ZbReceived\":{\"Device\":\"0xB6D4\",\"RMSVoltage\":232,\"RMSCurrent\":0,\"ActivePower\":0,\"CurrentSummationDelivered\":\"0x000000000000\",\"Endpoint\":1,\"LinkQuality\":66}}\n//  {\"ZbReceived\":{\"Device\":\"0xB6D4\",\"ConfigResponse\":{\"Power\":{\"Status\":0,\"StatusMsg\":\"SUCCESS\"}},\"Endpoint\":1,\"LinkQuality\":68}}\n//  {\"Device\":\"0xB6D4\",\"Config\":{\"Power\":{\"MinInterval\":1,\"MaxInterval\":3600}}}\n// ZbSend {\"Device\":\"0xB6D4\",\"Cluster\":\"0x000A\",\"Endpoint\":1,\"Response\":\"000A/0007\":748665857}\n// TEMP\n// {\"ZbReceived\":{\"0x5118\":{\"Device\":\"0x5118\",\"Temperature\":26.94,\"Humidity\":63.47,\"Endpoint\":1,\"LinkQuality\":100}}}\n// {\"ZbReceived\":{\"0x5118\":{\"Device\":\"0x5118\",\"BatteryPercentage\":91,\"Endpoint\":1,\"LinkQuality\":102}}}\n//\n// MOTION Detec\n// {\"ZbReceived\":{\"Device\":\"0x81A7\",\"0500?00\":\"010000010000\",\"ZoneStatusChange\":1,\"ZoneStatusChangeZone\":1,\"Occupancy\":1,\"Endpoint\":1,\"LinkQuality\":105}}\n// \n// Mi button\n//{\"ZbReceived\":{\"Device\":\"0x8CDD\",\"Power\":0,\"Endpoint\":1,\"LinkQuality\":123}}\n// 3 Button \n// Single Click {\"ZbReceived\":{\"Device\":\"0xD8BA\",\"0006!FD\":\"00\",\"LidlPower\":0,\"Endpoint\":1,\"LinkQuality\":79}}\n// Double click {\"ZbReceived\":{\"Device\":\"0xD8BA\",\"0006!FD\":\"01\",\"LidlPower\":1,\"Endpoint\":2,\"LinkQuality\":118}}\n//\n// Water Sensor with Tempper\n//  {\"ZbReceived\":{\"Device\":\"0x6AC7\",\"BatteryVoltage\":3,\"BatteryPercentage\":100,\"Endpoint\":1,\"LinkQuality\":87}}\n//  {\"ZbReceived\":{\"Device\":\"0x6AC7\",\"ZoneType\":42,\"Endpoint\":1,\"LinkQuality\":102}}\n//  {\"ZbReceived\":{\"Device\":\"0x6AC7\",\"0500?00\":\"040000010000\",\"ZoneStatusChange\":4,\"ZoneStatusChangeZone\":1,\"Water\":0,\"Tamper\":1,\"Endpoint\":1,\"LinkQuality\":61}}\n//  {\"ZbReceived\":{\"Device\":\"0x6AC7\",\"0500?00\":\"050000010000\",\"ZoneStatusChange\":5,\"ZoneStatusChangeZone\":1,\"Water\":1,\"Tamper\":1,\"Endpoint\":1,\"LinkQuality\":84}}\n//   Certain TUYA 05-Zigbee-CP03\n//  {\"ZbReceived\":{\"Device\":\"0x45E3\",\"ModelId\":\"TS130F\",\"Manufacturer\":\"_TZ3210_ol1uhvza\",\"ZCLVersion\":3,\"AppVersion\":129,\"PowerSource\":1,\"0000/FFFE\":0,\"Endpoint\":1,\"LinkQuality\":113}}\n// {\"ZbReceived\":{\"Device\":\"0x45E3\",\"TuyaMovingState\":1,\"CurrentPositionLiftPercentage\":4,\"TuyaCalibrationTime\":600,\"TuyaMotorReversal\":0,\"TuyaCalibration\":1,\"0102/8000\":0,\"Endpoint\":1,\"LinkQuality\":123}}\n//  {\"ZbState\":{\"Status\":33,\"Device\":\"0x45E3\",\"Endpoint\":\"0x01\",\"ProfileId\":\"0x0104\",\"DeviceId\":\"0x0202\",\"DeviceVersion\":1,\"InClusters\":[\"0x0004\",\"0x0005\",\"0x0102\",\"0x0000\"],\"OutClusters\":[\"0x0019\",\"0x000A\"]}}\n//  {\"ZbReceived\":{\"Device\":\"0x45E3\",\"CurrentPositionLiftPercentage\":4,\"Endpoint\":1,\"LinkQuality\":110}}\n// {\"ZbReceived\":{\"Device\":\"0x45E3\",\"Cluster\":10,\"Read\":[7],\"ReadNames\":{\"LocalTime\":true},\"Endpoint\":1,\"LinkQuality\":110}}\n// \n// Water Valve\n// {\"ZbReceived\":{\"Device\":\"0xBBFB\",\"Name\":\"0xA4C13835CDF380D8\",\"ModelId\":\"TS0001\",\"Manufacturer\":\"_TZ3000_iedbgyxt\",\"ZCLVersion\":3,\"AppVersion\":82,\"PowerSource\":1,\"0000/FFFE\":0,\"Endpoint\":1,\"LinkQuality\":110}}\n//\n// Switch Module Energy Monitor\n// {\"ZbReceived\":{\"Device\":\"0xBE24\",\"Name\":\"0xA4C138528BDB7D42\",\"ModelId\":\"TS0001\",\"Manufacturer\":\"_TZ3000_kqvb5akv\",\"ZCLVersion\":3,\"AppVersion\":72,\"PowerSource\":1,\"0000/FFFE\":0,\"Endpoint\":1,\"LinkQuality\":97}}\n// Wall Switch\n// {\"ZbReceived\":{\"Device\":\"0x56B2\",\"Name\":\"0xE0798DFFFECF9E15\",\"ModelId\":\"TS0013\",\"Manufacturer\":\"_TZ3000_snq47izk\",\"ZCLVersion\":3,\"AppVersion\":68,\"PowerSource\":3,\"0000/FFFE\":0,\"Endpoint\":1,\"LinkQuality\":89}}\n//\n//  IR sensor\n//  {\"ZbReceived\":{\"Device\":\"0x394B\",\"Name\":\"0xDC8E95FFFE3056CC\",\"ModelId\":\"TS1201\",\"Manufacturer\":\"_TZ3290_j37rooaxrcdcqo5n\",\"ZCLVersion\":3,\"AppVersion\":67,\"PowerSource\":3,\"0000/FFFE\":0,\"Endpoint\":1,\"LinkQuality\":48}}\n// Carbon Monoxide\n\n// {\"ZbReceived\":{\"Device\":\"0x8213\",\"Name\":\"0x00158D0001FF519E\",\"ModelId\":\"FNB56-COS06FB1.7\",\"Manufacturer\":\"feibit\",\"ZCLVersion\":2,\"AppVersion\":1,\"PowerSource\":3,\"Endpoint\":1,\"LinkQuality\":97}}\n\n// Human Presence Sensor 24GHz\n// {\"ZbReceived\":{\"Device\":\"0xC554\",\"Name\":\"0xA4C138816E6E27D3\",\"ModelId\":\"TS0601\",\"Manufacturer\":\"_TZE204_sxm7l9xa\",\"ZCLVersion\":3,\"AppVersion\":74,\"PowerSource\":1,\"0000/FFFE\":0,\"Endpoint\":1,\"LinkQuality\":92}}\n\n//  Smoke Detector\n// {\"ZbReceived\":{\"Device\":\"0x5A70\",\"Name\":\"0xA4C138B1CD39FC27\",\"ModelId\":\"TS0601\",\"Manufacturer\":\"_TZE200_m9skfctm\",\"ZCLVersion\":3,\"AppVersion\":72,\"PowerSource\":3,\"0000/FFFE\":0,\"Endpoint\":1,\"LinkQuality\":144}}\n// Temp model ZTH02\n//  {\"ZbReceived\":{\"Device\":\"0x4933\",\"Name\":\"0xA4C138DD1DFF5E7D\",\"ModelId\":\"TS0601\",\"Manufacturer\":\"_TZE200_9yapgbuv\",\"ZCLVersion\":3,\"AppVersion\":72,\"PowerSource\":3,\"0000/FFFE\":0,\"Endpoint\":1,\"LinkQuality\":144}}\n/**\n#Z2Tv1\n# Tuya fix bad reads on LCD temp/humidity item\n:TS0601,_TZE200_*\nEF00/0409=0204/0000         # Display mode (1=F 0=C)\nEF00/0201=0402/0000,mul:10  # Temperature\nEF00/0202=0405/0000,mul:100 # Humidity\nEF00/0204=0001/0021,mul:2   # Battery level\n**/\n// Door Sensor ZD08\n// {\"ZbReceived\":{\"Device\":\"0xDA09\",\"Name\":\"0xA4C138780D54BB4A\",\"ModelId\":\"TS0203\",\"Manufacturer\":\"_TZ3000_hkcpblrs\",\"ZCLVersion\":3,\"AppVersion\":69,\"PowerSource\":3,\"0000/FFFE\":0,\"Endpoint\":1,\"LinkQuality\":76}}\n// 150A Energy Meter\n//  {\"ZbReceived\":{\"Device\":\"0xC8E0\",\"Name\":\"0xA4C138454975731F\",\"ModelId\":\"TS0601\",\"Manufacturer\":\"_TZE204_ac0fhfiq\",\"ZCLVersion\":3,\"AppVersion\":74,\"PowerSource\":1,\"0000/FFFE\":0,\"Endpoint\":1,\"LinkQuality\":118}}\n\n// Snoff SNZB-02D TEMP and Humidity\n//  {\"ZbReceived\":{\"Device\":\"0x516B\",\"Name\":\"0x30FB10FFFE6EFC3E\",\"ModelId\":\"SNZB-02D\",\"Manufacturer\":\"SONOFF\",\"ZCLVersion\":8,\"AppVersion\":0,\"PowerSource\":0,\"Endpoint\":1,\"LinkQuality\":87}}\n\n//{\"ZbReceived\":{\"Device\":\"0x65F6\",\"Name\":\"0xA4C1387EB742B5C9\",\"ModelId\":\"TS0202\",\"Manufacturer\":\"_TZ3000_msl6wxk9\",\"ZCLVersion\":3,\"AppVersion\":70,\"PowerSource\":3,\"0000/FFFE\":0,\"Endpoint\":1,\"LinkQuality\":94}}\n//\n//{\"ZbReceived\":{\"Device\":\"0x50AE\",\"Name\":\"0xA4C1386C3BF2B3FD\",\"ModelId\":\"TS0601\",\"Manufacturer\":\"_TZE200_dwcarsat\",\"ZCLVersion\":3,\"AppVersion\":70,\"PowerSource\":1,\"0000/FFFE\":0,\"Endpoint\":1,\"LinkQuality\":147}}\n//0202 : 9 PM2.5 , 0212: 277 Current Temp  /0213\":516 Current Huminity 0214 : 1 CH20 , 0215 : 11 VOC  , 0216 : 353 CO2 \n\n\n// 3 Phase Energy Meter\n// {\"ZbReceived\":{\"Device\":\"0x1158\",\"Name\":\"0xA4C13896D973FB76\",\"ModelId\":\"TS0601\",\"Manufacturer\":\"_TZE200_nslr42tt\",\"ZCLVersion\":3,\"AppVersion\":69,\"PowerSource\":1,\"0000/FFFE\":0,\"Endpoint\":1,\"LinkQuality\":118}}\n/**{\n    \"ac_frequency\": 50,\n    \"current\": 1.76,\n    \"current_a\": 0.726,\n    \"current_b\": 0.954,\n    \"current_c\": 0.076,\n    \"device_status\": 0,\n    \"energy\": 1.99,\n    \"energy_a\": 0.784,\n    \"energy_b\": 0.795,\n    \"energy_c\": 0.413,\n    \"linkquality\": 65,\n    \"power\": 15,\n    \"power_a\": 82,\n    \"power_b\": 39275,\n    \"power_c\": 39304,\n    \"power_factor_a\": 48,\n    \"power_factor_b\": 100,\n    \"power_factor_c\": 100,\n    \"temperature\": 37.6,\n    \"voltage_a\": 226.2,\n    \"voltage_b\": 226.4,\n    \"voltage_c\": 226.8\n} **/\n/** \n * https://raw.githubusercontent.com/kkossev/Hubitat/main/Drivers/Tuya%20Smart%20Siren%20Zigbee/Tuya%20Smart%20Siren%20Zigbee.groovy\n * https://github.com/Koenkk/zigbee-herdsman-converters/blob/master/src/devices/tuya.ts\n * **/\n/** Decoder **/\n//{\"ZbReceived\":{\"Device\":\"0x7106\",\"ModelId\":\"TS0201\",\"Manufacturer\":\"_TZ3000_kchagk8y\",\"ZCLVersion\":3,\"AppVersion\":67,\"PowerSource\":3,\"0000/FFFE\":0,\"Endpoint\":1,\"LinkQuality\":141}}\n/** Decoder **/\n//{\"ZbReceived\":{\"Device\":\"0x7106\",\"ModelId\":\"TS0201\",\"Manufacturer\":\"_TZ3000_kchagk8y\",\"ZCLVersion\":3,\"AppVersion\":67,\"PowerSource\":3,\"0000/FFFE\":0,\"Endpoint\":1,\"LinkQuality\":141}}\n// decode payload to string\n//var payloadStr = decodeToString(payload);\n\nvar MQTTPRO  =metadata['topic'];\nvar MQTTPROFILE = MQTTPRO.split('/')[0];\n\n//var MQTTPROFILE = 'CSC_PROJECT2';\n\nvar payloadStr = decodeToString(payload);\n\n// decode payload to JSON\nvar data = decodeToJson(payload);\nvar response = payloadStr.replace(/[/]/g, '');\n   data = JSON.parse(response);\n\n\nif (payloadStr.match(\"ZbReceived\") != null) {\n\n    var topicPattern = MQTTPROFILE + '/(.+)/tele';\n    var GatewayIDPattern = 'tele/(.+)/SENSOR';\n    var customerName = metadata.topic.match(topicPattern)[\n        1];\n     var GatewayID = metadata.topic.match(GatewayIDPattern)[\n        1];\n    var res_attr = {};\n    var res_tele = {};\n    var hasModel = 0;\n\n    var deviceName = data.ZbReceived.Name;\n    var deviceZoneStatusChange = data.ZbReceived\n        .ZoneStatusChange;\n\n\n\n\n    for (var status in data) {\n        if (status == \"ZbReceived\") {\n\n            var dataZbReceived = data.ZbReceived;\n            for (var status in dataZbReceived) {\n                if (status == \"ModelId\") {\n                    hasModel = 1;\n                    if (dataZbReceived.ModelId ==\n                        \"TS0202\") {\n                        var groupName = 'Motion Sensor';\n                        var deviceType = 'Motion Sensor';\n                    }\n                    if (dataZbReceived.ModelId ==\n                        \"SNZB-02D\") {\n                        var groupName = 'Temperature Humidity Sensor';\n                        var deviceType = 'Temperature Humidity Sensor';\n                    }\n                    \n                    if (dataZbReceived.ModelId ==\n                        \"TS0203\") {\n                        var groupName = 'Door Windows Sensor';\n                        var deviceType = 'Door Windows Sensor';\n                    }\n\n                    if (dataZbReceived.ModelId ==\n                        \"lumi.sensor_motion\") {\n                        var groupName = 'Motion Sensor';\n                        var deviceType = 'Motion Sensor';\n                    }\n                    if (dataZbReceived.ModelId ==\n                        \"TS130F\") {\n                        var groupName = 'Certain Switch';\n                        var deviceType = 'Certain Switch';\n                    }\n                    if (dataZbReceived.ModelId ==\n                        \"TS0001\") {\n                        if (dataZbReceived.Manufacturer ==\n                            \"_TZ3000_iedbgyxt\") {\n                            var groupName = 'Water Valve';\n                            var deviceType = 'Water Valve';\n                        }\n                        if (dataZbReceived.Manufacturer ==\n                            \"_TZ3000_kqvb5akv\") {\n                            var groupName =\n                                'Switch Module Energy Monitor';\n                            var deviceType =\n                                'Switch Module Energy Monitor';\n                        }\n                    }\n                    if (dataZbReceived.ModelId ==\n                        \"TS0207\") {\n                        var groupName = 'Water Leak Sensor';\n                        var deviceType =\n                            'Water Leak Sensor';\n                    }\n                    if (dataZbReceived.ModelId ==\n                        \"TS0013\") {\n                        var groupName = 'Wall Switch';\n                        var deviceType = 'Wall Switch';\n                    }\n                    if (dataZbReceived.ModelId ==\n                        \"TS011F\") {\n                        var groupName = 'Wall Plug';\n                        var deviceType = 'Wall Plug';\n                    }\n                    if (dataZbReceived.ModelId ==\n                        \"lumi.sensor_switch\") {\n                        var groupName = 'Button Switch';\n                        var deviceType = 'Button Switch';\n                    }\n                    if (dataZbReceived.ModelId ==\n                        \"TS0043\") {\n                        var groupName = 'Button Switch';\n                        var deviceType = 'Button 3 Switch';\n                    }\n                    if (dataZbReceived.ModelId ==\n                        \"TS0201\") {\n                        var groupName =\n                            'Temperature Humidity Sensor';\n                        var deviceType =\n                            'Temperature Humidity Sensor';\n                    }\n                    if (dataZbReceived.ModelId ==\n                        \"TS0210\") {\n                        var groupName = 'Vibration Sensor';\n                        var deviceType = 'Vibration Sensor';\n                    }\n                    if (dataZbReceived.ModelId ==\n                        \"RH3040\") {\n                        var groupName = 'Motion Sensor';\n                        var deviceType = 'Motion Sensor';\n                    }\n                    if (dataZbReceived.ModelId ==\n                        \"TS1201\") {\n                        var groupName = 'IR Sensor';\n                        var deviceType = 'IR Sensor';\n                    }\n                    if (dataZbReceived.ModelId ==\n                        \"FNB56-COS06FB1.7\") {\n                        var groupName = 'Carbon Monoxide ';\n                        var deviceType = 'Carbon Monoxide ';\n                    }\n                    if (dataZbReceived.ModelId ==\n                        \"TS0601\") {\n\n                    if (dataZbReceived.Manufacturer ==\n                            \"_TZE200_dwcarsat\") {\n                            var groupName =\n                                'Air Quality Sensor';\n                            var deviceType =\n                                'Air Quality Sensor';\n                        }\n                        if (dataZbReceived.Manufacturer ==\n                            \"_TZE204_sxm7l9xa\") {\n                            var groupName =\n                                'Human Presence Sensor 24GHz';\n                            var deviceType =\n                                'Human Presence Sensor 24GHz';\n                        }\n                        if (dataZbReceived.Manufacturer ==\n                            \"_TZE204_cjbofhxw\") {\n                            var groupName =\n                                '1Phase Energy Monitor';\n                            var deviceType =\n                                '1Phase Energy Monitor';\n                        }\n                        \n                        if (dataZbReceived.Manufacturer ==\n                            \"_TZE200_m9skfctm\") {\n                            var groupName =\n                                'Smoke Detector';\n                            var deviceType =\n                                'Smoke Detector';\n                        } \n                      if (dataZbReceived.Manufacturer ==\n                            \"_TZE200_nslr42tt\") {\n                            var groupName =\n                                '3Phase Energy Monitor';\n                            var deviceType =\n                                '3Phase Energy Monitor';\n                        } \n                    }\n                }\n\n            }\n            break;\n        }\n    }\n\n    if (hasModel == 0) {\n        var result = {\n            deviceName: deviceName,\n      \n            telemetry: data.ZbReceived\n \n        };\n\n\n    } else {\n        //  if (metadata.topic.match(topicPattern) != null) {\n        var result = {\n            deviceName: deviceName,\n            deviceType: deviceType,\n            customerName: customerName,\n            groupName: groupName,\n            attributes: data.ZbReceived,\n            \n\n        };\n\n\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n    //var customerName = 'Customer LPN';\n    //var groupName = 'water devices';\n    // use assetName and assetType instead of deviceName and deviceType\n    // to automatically create assets instead of devices.\n    // var assetName = 'Asset A';\n    // var assetType = 'building';\n\n    // Result object with device/asset attributes/telemetry data\n\n\n    /** Helper functions **/\n\n    function decodeToString(payload) {\n        return String.fromCharCode.apply(String,\n            payload);\n    }\n\n    function decodeToJson(payload) {\n        // covert payload to string.\n        var str = decodeToString(payload);\n\n        // parse string to JSON\n        var data = JSON.parse(str);\n        return data;\n    }\n\n    return result;",
      "tbelDecoder" : "// Decode an uplink message from a buffer\n// payload - array of bytes\n// metadata - key/value object\n\n/** Decoder **/\n\n// decode payload to string\nvar payloadStr = decodeToString(payload);\n\n// decode payload to JSON\n// var data = decodeToJson(payload);\n\nvar deviceName = 'Device A';\nvar deviceType = 'thermostat';\nvar customerName = 'Customer C';\nvar groupName = 'thermostat devices';\n// use assetName and assetType instead of deviceName and deviceType\n// to automatically create assets instead of devices.\n// var assetName = 'Asset A';\n// var assetType = 'building';\n\n// Result object with device/asset attributes/telemetry data\nvar result = {\n// Use deviceName and deviceType or assetName and assetType, but not both.\n   deviceName: deviceName,\n   deviceType: deviceType,\n// assetName: assetName,\n// assetType: assetType,\n// customerName: customerName,\n   groupName: groupName,\n   attributes: {\n       model: 'Model A',\n       serialNumber: 'SN111',\n       integrationName: metadata['integrationName']\n   },\n   telemetry: {\n       temperature: 42,\n       humidity: 80,\n       rawData: payloadStr\n   }\n};\n\n/** Helper functions 'decodeToString' and 'decodeToJson' are already built-in **/\n\nreturn result;",
      "encoder" : null,
      "tbelEncoder" : null
    },
    "debugMode" : true,
    "edgeTemplate" : false,
    "externalId" : null,
    "id" : {
      "entityType" : "CONVERTER",
      "id" : "51eaf050-77ed-11ee-92d7-c9d101394cdd"
    },
    "name" : "Node-Uplink-SENSOR",
    "type" : "UPLINK"
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}