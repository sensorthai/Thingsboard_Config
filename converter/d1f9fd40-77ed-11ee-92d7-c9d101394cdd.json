{
  "entityType" : "CONVERTER",
  "entity" : {
    "additionalInfo" : {
      "description" : ""
    },
    "configuration" : {
      "scriptLang" : "JS",
      "decoder" : "// Decode an uplink message from a buffer\n// {\"ZbState\":{\"Status\":34,\"IEEEAddr\":\"0x70B3D52B6002F1A3\",\"ShortAddr\":\"0xACBC\",\"ParentNetwork\":\"0x0000\",\"JoinStatus\":1,\"Decision\":0}}\n// payload - array of bytes\n// metadata - key/value object\n// {\"ZbReceived\":{\"Device\":\"0x2979\",\"BatteryPercentage\":100,\"BatteryVoltage\":3,\"Endpoint\":1,\"LinkQuality\":107}}\n// {\"ZbReceived\":{\"Device\":\"0x5B7C\",\"AppVersion\":100,\"Endpoint\":1,\"LinkQuality\":58}}\n// {\"ZbReceived\":{\"Device\":\"0xB114\",\"AppVersion\":82,\"0000/FFE2\":54,\"0000/FFE4\":0,\"Endpoint\":1,\"LinkQuality\":110}}\n// {\"ZbReceived\":{\"Device\":\"0x2979\",\"Cluster\":10,\"Read\":[7],\"ReadNames\":{\"LocalTime\":true},\"Endpoint\":1,\"LinkQuality\":110}}\n// Motion Sensor\n// {\"ZbReceived\":{\"Device\":\"0x2979\",\"0500?00\":\"010800010000\",\"ZoneStatusChange\":2049,\"ZoneStatusChangeZone\":1,\"Movement\":1,\"Endpoint\":1,\"LinkQuality\":113}}\n// Water Sensor\n//  {\"ZbReceived\":{\"Device\":\"0x1A7E\",\"0500?00\":\"000000010000\",\"ZoneStatusChange\":0,\"ZoneStatusChangeZone\":1,\"Water\":0,\"Endpoint\":1,\"LinkQuality\":126}}\n\n// {\"ZbReceived\":{\"Device\":\"0xB114\",\"Power\":1,\"Endpoint\":1,\"LinkQuality\":113}}\n\n// Energy Meter\n// {\"ZbReceived\":{\"Device\":\"0xB6D4\",\"Power\":0,\"Endpoint\":1,\"LinkQuality\":76}}\n//  {\"ZbReceived\":{\"Device\":\"0xB6D4\",\"RMSVoltage\":232,\"RMSCurrent\":0,\"ActivePower\":0,\"CurrentSummationDelivered\":\"0x000000000000\",\"Endpoint\":1,\"LinkQuality\":66}}\n//  {\"ZbReceived\":{\"Device\":\"0xB6D4\",\"ConfigResponse\":{\"Power\":{\"Status\":0,\"StatusMsg\":\"SUCCESS\"}},\"Endpoint\":1,\"LinkQuality\":68}}\n//  {\"Device\":\"0xB6D4\",\"Config\":{\"Power\":{\"MinInterval\":1,\"MaxInterval\":3600}}}\n// ZbSend {\"Device\":\"0xB6D4\",\"Cluster\":\"0x000A\",\"Endpoint\":1,\"Response\":\"000A/0007\":748665857}\n// TEMP\n// {\"ZbReceived\":{\"0x5118\":{\"Device\":\"0x5118\",\"Temperature\":26.94,\"Humidity\":63.47,\"Endpoint\":1,\"LinkQuality\":100}}}\n// {\"ZbReceived\":{\"0x5118\":{\"Device\":\"0x5118\",\"BatteryPercentage\":91,\"Endpoint\":1,\"LinkQuality\":102}}}\n//\n// MOTION Detec\n// {\"ZbReceived\":{\"Device\":\"0x81A7\",\"0500?00\":\"010000010000\",\"ZoneStatusChange\":1,\"ZoneStatusChangeZone\":1,\"Occupancy\":1,\"Endpoint\":1,\"LinkQuality\":105}}\n// \n// Mi button\n//{\"ZbReceived\":{\"Device\":\"0x8CDD\",\"Power\":0,\"Endpoint\":1,\"LinkQuality\":123}}\n// 3 Button \n// Single Click {\"ZbReceived\":{\"Device\":\"0xD8BA\",\"0006!FD\":\"00\",\"LidlPower\":0,\"Endpoint\":1,\"LinkQuality\":79}}\n// Double click {\"ZbReceived\":{\"Device\":\"0xD8BA\",\"0006!FD\":\"01\",\"LidlPower\":1,\"Endpoint\":2,\"LinkQuality\":118}}\n//\n// Water Sensor with Tempper\n//  {\"ZbReceived\":{\"Device\":\"0x6AC7\",\"BatteryVoltage\":3,\"BatteryPercentage\":100,\"Endpoint\":1,\"LinkQuality\":87}}\n//  {\"ZbReceived\":{\"Device\":\"0x6AC7\",\"ZoneType\":42,\"Endpoint\":1,\"LinkQuality\":102}}\n//  {\"ZbReceived\":{\"Device\":\"0x6AC7\",\"0500?00\":\"040000010000\",\"ZoneStatusChange\":4,\"ZoneStatusChangeZone\":1,\"Water\":0,\"Tamper\":1,\"Endpoint\":1,\"LinkQuality\":61}}\n//  {\"ZbReceived\":{\"Device\":\"0x6AC7\",\"0500?00\":\"050000010000\",\"ZoneStatusChange\":5,\"ZoneStatusChangeZone\":1,\"Water\":1,\"Tamper\":1,\"Endpoint\":1,\"LinkQuality\":84}}\n//   Certain TUYA 05-Zigbee-CP03\n//  {\"ZbReceived\":{\"Device\":\"0x45E3\",\"ModelId\":\"TS130F\",\"Manufacturer\":\"_TZ3210_ol1uhvza\",\"ZCLVersion\":3,\"AppVersion\":129,\"PowerSource\":1,\"0000/FFFE\":0,\"Endpoint\":1,\"LinkQuality\":113}}\n// {\"ZbReceived\":{\"Device\":\"0x45E3\",\"TuyaMovingState\":1,\"CurrentPositionLiftPercentage\":4,\"TuyaCalibrationTime\":600,\"TuyaMotorReversal\":0,\"TuyaCalibration\":1,\"0102/8000\":0,\"Endpoint\":1,\"LinkQuality\":123}}\n//  {\"ZbState\":{\"Status\":33,\"Device\":\"0x45E3\",\"Endpoint\":\"0x01\",\"ProfileId\":\"0x0104\",\"DeviceId\":\"0x0202\",\"DeviceVersion\":1,\"InClusters\":[\"0x0004\",\"0x0005\",\"0x0102\",\"0x0000\"],\"OutClusters\":[\"0x0019\",\"0x000A\"]}}\n//  {\"ZbReceived\":{\"Device\":\"0x45E3\",\"CurrentPositionLiftPercentage\":4,\"Endpoint\":1,\"LinkQuality\":110}}\n// {\"ZbReceived\":{\"Device\":\"0x45E3\",\"Cluster\":10,\"Read\":[7],\"ReadNames\":{\"LocalTime\":true},\"Endpoint\":1,\"LinkQuality\":110}}\n// \n// Water Valve\n// {\"ZbReceived\":{\"Device\":\"0xBBFB\",\"Name\":\"0xA4C13835CDF380D8\",\"ModelId\":\"TS0001\",\"Manufacturer\":\"_TZ3000_iedbgyxt\",\"ZCLVersion\":3,\"AppVersion\":82,\"PowerSource\":1,\"0000/FFFE\":0,\"Endpoint\":1,\"LinkQuality\":110}}\n//\n// Switch Module Energy Monitor\n// {\"ZbReceived\":{\"Device\":\"0xBE24\",\"Name\":\"0xA4C138528BDB7D42\",\"ModelId\":\"TS0001\",\"Manufacturer\":\"_TZ3000_kqvb5akv\",\"ZCLVersion\":3,\"AppVersion\":72,\"PowerSource\":1,\"0000/FFFE\":0,\"Endpoint\":1,\"LinkQuality\":97}}\n// Wall Switch\n// {\"ZbReceived\":{\"Device\":\"0x56B2\",\"Name\":\"0xE0798DFFFECF9E15\",\"ModelId\":\"TS0013\",\"Manufacturer\":\"_TZ3000_snq47izk\",\"ZCLVersion\":3,\"AppVersion\":68,\"PowerSource\":3,\"0000/FFFE\":0,\"Endpoint\":1,\"LinkQuality\":89}}\n//\n//  IR sensor\n//  {\"ZbReceived\":{\"Device\":\"0x394B\",\"Name\":\"0xDC8E95FFFE3056CC\",\"ModelId\":\"TS1201\",\"Manufacturer\":\"_TZ3290_j37rooaxrcdcqo5n\",\"ZCLVersion\":3,\"AppVersion\":67,\"PowerSource\":3,\"0000/FFFE\":0,\"Endpoint\":1,\"LinkQuality\":48}}\n// Carbon Monoxide\n\n// {\"ZbReceived\":{\"Device\":\"0x8213\",\"Name\":\"0x00158D0001FF519E\",\"ModelId\":\"FNB56-COS06FB1.7\",\"Manufacturer\":\"feibit\",\"ZCLVersion\":2,\"AppVersion\":1,\"PowerSource\":3,\"Endpoint\":1,\"LinkQuality\":97}}\n\n// Human Presence Sensor 24GHz\n// {\"ZbReceived\":{\"Device\":\"0xC554\",\"Name\":\"0xA4C138816E6E27D3\",\"ModelId\":\"TS0601\",\"Manufacturer\":\"_TZE204_sxm7l9xa\",\"ZCLVersion\":3,\"AppVersion\":74,\"PowerSource\":1,\"0000/FFFE\":0,\"Endpoint\":1,\"LinkQuality\":92}}\n\n/** Decoder **/\n//{\"ZbReceived\":{\"Device\":\"0x7106\",\"ModelId\":\"TS0201\",\"Manufacturer\":\"_TZ3000_kchagk8y\",\"ZCLVersion\":3,\"AppVersion\":67,\"PowerSource\":3,\"0000/FFFE\":0,\"Endpoint\":1,\"LinkQuality\":141}}\n// decode payload to string\n//var payloadStr = decodeToString(payload);\n\nvar payloadStr = decodeToString(payload);\n\n// decode payload to JSON\nvar data = decodeToJson(payload);\n\n//res_tele = data.ZbReceived.LinkQuality;\n//var deviceName = data;\n\n\nif (payloadStr.match(\"ZbReceived\") != null) {\n\n}\n/**\n          \nvar topicPattern = 'CSC_PROJECT/(.+)/tele';\nvar customerName =  metadata.topic.match(topicPattern)[1];\nvar res_attr = {};\nvar res_tele = {};\nvar hasModel = 0;\n\n\n \n\n\n\n\n\n \n var deviceName = data.ZbReceived.Name;\n var deviceZoneStatusChange = data.ZbReceived.ZoneStatusChange;\n\n //res_tele = data.ZbReceived.LinkQuality;\n//var deviceName = data;\n for (var status in data) {\n      if (status == \"ZbReceived\") {\n \n          var dataZbReceived =   data.ZbReceived; \n           for (var status in dataZbReceived) {\n                 if (status == \"ModelId\") {\n                        hasModel = 1;\n                        \n\n                     if (dataZbReceived.ModelId == \"lumi.sensor_motion\") { var groupName = 'Motion Sensor';var deviceType = 'Motion Sensor';   }\n                     if (dataZbReceived.ModelId == \"TS130F\") { var groupName = 'Certain Switch';    var deviceType = 'Certain Switch';  }\n                     if (dataZbReceived.ModelId == \"TS0001\") {  \n                        if (dataZbReceived.Manufacturer == \"_TZ3000_iedbgyxt\") {  var groupName = 'Water Valve'; var deviceType = 'Water Valve'; } \n                        if (dataZbReceived.Manufacturer == \"_TZ3000_kqvb5akv\") {  var groupName = 'Switch Module Energy Monitor'; var deviceType = 'Switch Module Energy Monitor'; }     \n                     }\n                     if (dataZbReceived.ModelId == \"TS0207\") {  var groupName = 'Water Leak Sensor'; var deviceType = 'Water Leak Sensor'; }\n                     if (dataZbReceived.ModelId == \"TS0013\") { var groupName = 'Wall Switch'; var deviceType = 'Wall Switch'; }\n                     if (dataZbReceived.ModelId == \"TS011F\") { var groupName = 'Wall Plug'; var deviceType = 'Wall Plug'; }\n                     if (dataZbReceived.ModelId == \"lumi.sensor_switch\") { var groupName = 'Button Switch'; var deviceType = 'Button Switch'; }\n                     if (dataZbReceived.ModelId == \"TS0043\") { var groupName = 'Button Switch'; var deviceType = 'Button 3 Switch'; }\n                     if (dataZbReceived.ModelId == \"TS0201\") { var groupName = 'Temperature Sensor'; var deviceType = 'Temperature Sensor'; }\n                     if (dataZbReceived.ModelId == \"TS0210\") { var groupName = 'Vibration Sensor'; var deviceType = 'Vibration Sensor'; }\n                     if (dataZbReceived.ModelId == \"RH3040\") {  var groupName = 'Motion Sensor'; var deviceType = 'Motion Sensor'; }\n                     if (dataZbReceived.ModelId == \"TS1201\") {  var groupName = 'IR Sensor'; var deviceType = 'IR Sensor'; } \n                     if (dataZbReceived.ModelId == \"FNB56-COS06FB1.7\") {  var groupName = 'Carbon Monoxide '; var deviceType = 'Carbon Monoxide '; } \n                     if (dataZbReceived.ModelId == \"TS0601\") {  \n                                                    \n                         if (dataZbReceived.Manufacturer == \"_TZE204_sxm7l9xa\") {  var groupName = 'Human Presence Sensor 24GHz'; var deviceType = 'Human Presence Sensor 24GHz'; } \n                         if (dataZbReceived.Manufacturer == \"_TZE204_cjbofhxw\") {  var groupName = '1Phase Energy Monitor Module'; var deviceType = '1Phase Energy Monitor Module'; }    \n                 }\n                 }\n                \n            }\n        break;\n      }\n  }\n  \n if (hasModel == 0) {\n     var result = {\n   deviceName: deviceName,\n   telemetry: data.ZbReceived\n    };\n\n  \n } else {\n//  if (metadata.topic.match(topicPattern) != null) {\n  var result = {\n   deviceName: deviceName,\n   deviceType: deviceType,\n   customerName: customerName,\n   groupName: groupName,\n   attributes:  data.ZbReceived\n \n    };\n // }\n **/\n\n\nif (payloadStr.match(\"ZbState\") != null) {\n\n    if (data.ZbState.Status == 34) {\n        var deviceName = data.ZbState.IEEEAddr;\n  \n    } // Zbstate 30\n    if (data.ZbState.Status == 30) {\n        var deviceName = data.ZbState.IEEEAddr;\n \n    } // Zbstate 32\n    if (data.ZbState.Status == 32) {\n        var deviceName = data.ZbState.IEEEAddr;\n \n    } // Zbstate 33\n\n    if (data.ZbState == 20) {\n        var deviceName = data.ZbReceived.Name;\n        var result = {\n\n            deviceName: deviceName,\n            telemetry: data.ZbReceived\n        }\n    } // Zbstate 20\n} // payloadStr.match(\"ZbState\") != null\n\nif (payloadStr.match(\"ZbResponse\") != null) {\n    var deviceName = data.ZbState.IEEEAddr;\n    var result = {\n\n        telemetry: data.ZbResponse\n    }\n}\nif (payloadStr.match(\"ZbRouteError\") != null) {\n    var deviceName = data.ZbState.IEEEAddr;\n    var result = {\n\n        telemetry: data.ZbRouteError\n    }\n}\n//var customerName = 'Customer LPN';\n//var groupName = 'water devices';\n// use assetName and assetType instead of deviceName and deviceType\n// to automatically create assets instead of devices.\n// var assetName = 'Asset A';\n// var assetType = 'building';\n\n// Result object with device/asset attributes/telemetry data\n\n\n/** Helper functions **/\n\nfunction decodeToString(payload) {\n    return String.fromCharCode.apply(String, payload);\n}\n\nfunction decodeToJson(payload) {\n    // covert payload to string.\n    var str = decodeToString(payload);\n\n    // parse string to JSON\n    var data = JSON.parse(str);\n    return data;\n}\n\nreturn result;",
      "tbelDecoder" : "// Decode an uplink message from a buffer\n// payload - array of bytes\n// metadata - key/value object\n\n/** Decoder **/\n\n// decode payload to string\nvar payloadStr = decodeToString(payload);\n\n// decode payload to JSON\n// var data = decodeToJson(payload);\n\nvar deviceName = 'Device A';\nvar deviceType = 'thermostat';\nvar customerName = 'Customer C';\nvar groupName = 'thermostat devices';\n// use assetName and assetType instead of deviceName and deviceType\n// to automatically create assets instead of devices.\n// var assetName = 'Asset A';\n// var assetType = 'building';\n\n// Result object with device/asset attributes/telemetry data\nvar result = {\n// Use deviceName and deviceType or assetName and assetType, but not both.\n   deviceName: deviceName,\n   deviceType: deviceType,\n// assetName: assetName,\n// assetType: assetType,\n// customerName: customerName,\n   groupName: groupName,\n   attributes: {\n       model: 'Model A',\n       serialNumber: 'SN111',\n       integrationName: metadata['integrationName']\n   },\n   telemetry: {\n       temperature: 42,\n       humidity: 80,\n       rawData: payloadStr\n   }\n};\n\n/** Helper functions 'decodeToString' and 'decodeToJson' are already built-in **/\n\nreturn result;",
      "encoder" : null,
      "tbelEncoder" : null
    },
    "debugMode" : true,
    "edgeTemplate" : false,
    "externalId" : null,
    "id" : {
      "entityType" : "CONVERTER",
      "id" : "d1f9fd40-77ed-11ee-92d7-c9d101394cdd"
    },
    "name" : "NODE-Uplink-RESULT",
    "type" : "UPLINK"
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}